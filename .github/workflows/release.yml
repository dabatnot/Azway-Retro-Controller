name: Create Release

on:
 push:
  branches:
   - main

env:
 VERSION: v1.0.2

jobs:
 build:
  runs-on: ubuntu-latest

  steps:
   - name: Checkout repository
     uses: actions/checkout@v2

   - name: Check GitHub Authentication
     run: |
      response=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.PAT_TOKEN }}" https://api.github.com/user)
      if [ $response -eq 200 ]; then
        echo "Authentication successful"
      else
        echo "Authentication failed with status code $response"
        exit 1
      fi
     shell: bash

   - name: Set up Python
     uses: actions/setup-python@v2
     with:
      python-version: '3.x'

   - name: Install PlatformIO
     run: pip install -U platformio

   - name: Build Project
     run: pio run

   - name: Create build directory
     run: mkdir -p .pio/build/HeltecCustomV2/

   - name: Copy Static File
     run: cp static_bins/boot_app0.bin .pio/build/HeltecCustomV2/

   - name: List Build Directory Contents
     run: ls -la .pio/build/HeltecCustomV2/

   - name: Archive Binaries
     run: zip -j firmware.zip .pio/build/HeltecCustomV2/firmware.bin .pio/build/HeltecCustomV2/boot_app0.bin

   - name: Create Release
     id: create_release
     uses: actions/create-release@v1
     with:
      tag_name: ${{ env.VERSION }}
      release_name: Release ${{ env.VERSION }}
      body: 'Automated release of the firmware'
      draft: false
      prerelease: false

   - name: Upload Release Asset
     uses: actions/upload-release-asset@v1
     with:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      asset_path: firmware.zip
      asset_name: firmware.zip
      asset_content_type: application/zip
